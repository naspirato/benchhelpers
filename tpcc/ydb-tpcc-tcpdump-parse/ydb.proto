syntax = "proto3";

package ydb;

message Query {
    // Text of query or id prepared query
    oneof query {
        // SQL program
        string yql_text = 1;
        // Prepared query id
        string id = 2;
    }
}

message SerializableModeSettings {
}

message OnlineModeSettings {
    bool allow_inconsistent_reads = 1;
}

message StaleModeSettings {
}

message SnapshotModeSettings {
}

message TransactionSettings {
    oneof tx_mode {
        SerializableModeSettings serializable_read_write = 1;
        OnlineModeSettings online_read_only = 2;
        StaleModeSettings stale_read_only = 3;
        SnapshotModeSettings snapshot_read_only = 4;
    }
}

message TransactionControl {
    oneof tx_selector {
        string tx_id = 1;
        TransactionSettings begin_tx = 2;
    }

    bool commit_tx = 10;
}

message Operation {
    // Identifier of the operation, empty value means no active operation object is present (it was forgotten or
    // not created in the first place, as in SYNC operation mode).
    string id = 1;

    // true - this operation has been completed (doesn't matter successful or not),
    // so Status field has status code, and Result field can contains result data.
    // false - this operation still running. You can repeat request using operation Id.
    bool ready = 2;
}

message ExecuteDataQueryRequest {
    // Session identifier
    string session_id = 1;
    TransactionControl tx_control = 2;
    Query query = 3;
}

message ExecuteDataQueryResponse {
    Operation operation = 1;
}

message CommitTransactionRequest {
    // Session identifier
    string session_id = 1;
    // Transaction identifier
    string tx_id = 2;
}

message CommitTransactionResponse {
    Operation operation = 1;
}
